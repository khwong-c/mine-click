name: Build and Deploy
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
permissions:
  id-token: write
  pages: write
jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/configure-pages@v5
      - uses: pnpm/action-setup@v4
      - name: Use Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'pnpm'
      - run: pnpm i

      # Testing and Linting before build
      - run: pnpm lint
      #    - run: pnpm test

      - run: pnpm build
      - uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  build-backend:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: server/go.mod

      - name: Lint
        run:
          go tool github.com/golangci/golangci-lint/v2/cmd/golangci-lint run ./...
        working-directory: server

      - name: Test
        run: make test
        working-directory: server

      - name: Report
        uses: becheran/go-testreport@main
        with:
          input: server/test-report.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: server
          file: alpine.Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-frontend
      - build-backend
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment